---
services:
  frontend:
    build:
      context: ./authenticator
    ports:
      - 8088:8088
    env_file: .compose.env
    depends_on:
      - auth
      - api
  api:
    image: relayer-api
    build:
      context: .
    command: api
    env_file: .compose.env
    depends_on:
      database:
        condition: service_healthy
    ports:
      - 8987:8987
      - 8989:8989
      - 8990:8990
    volumes:
      - log-data:/var/log/relayer-api
  auth:
    image: relayer-api
    command: auth
    env_file: .compose.env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - log-data:/var/log/relayer-archiver
  archiver:
    image: relayer-api
    command: archiver
    env_file: .compose.env
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - log-data:/var/log/relayer-archiver
    extra_hosts:
      - "host.docker.internal:host-gateway"
  database:
    image: postgres
    environment:
      POSTGRES_PASSWORD: relayer
      POSTGRES_USER: relayer
      POSTGRES_DB: relayer
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d relayer -U relayer"]
      interval: 10s
      timeout: 3s
      retries: 3
volumes:
  log-data:
  db-data:
networks:
  default:
    external:
      name: twilight-relayer_default
