"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.JsonRpc = exports.JsonRpcError = void 0;
const axios_1 = __importDefault(require("axios"));
const axios_cookiejar_support_1 = __importDefault(require("axios-cookiejar-support"));
const uuid = __importStar(require("uuid"));
(0, axios_cookiejar_support_1.default)(axios_1.default);
class JsonRpcError {
    constructor(message, code) {
        this.code = code;
        this.name = 'JsonRpcError';
        this.message = message || 'Server returned an error response';
        this.stack = new Error().stack;
    }
}
exports.JsonRpcError = JsonRpcError;
class JsonRpc {
    constructor(url) {
        this.url = url;
    }
    setUrl(url) {
        this.url = url;
    }
    async call(method, params, cookieJar) {
        var _a, _b;
        try {
            const response = await axios_1.default.post(this.url, {
                id: uuid.v4(),
                jsonrpc: '2.0',
                method: method,
                params: params,
            }, { jar: cookieJar });
            return response.data;
        }
        catch (error) {
            throw new JsonRpcError(error.message, (_b = (_a = error.response) === null || _a === void 0 ? void 0 : _a.statusText) !== null && _b !== void 0 ? _b : error.code);
        }
    }
}
exports.JsonRpc = JsonRpc;
